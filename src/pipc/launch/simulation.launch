<launch>
    <!-- size of map, change the size in x, y, z according to your application -->
    <arg name="map_size_x" value="40.0" />
    <arg name="map_size_y" value="40.0" />
    <arg name="map_size_z" value="5.0" />

    <!-- 初始位置 -->
    <arg name="init_x_" value="0.0" />
    <arg name="init_y_" value="0.0" />
    <arg name="init_z_" value="1.0" />

    <!-- 话题名称 -->
    <arg name="frame_id" default="world" />
    <arg name="odometry_topic" default="/simulator/odom" />
    <arg name="imu_topic" default="/simulator/imu/data_raw" />
    <arg name="local_map_topic" default="/virtual_map/pointcloud2" />
    <arg name="static_map_topic" default="/static_map" />
    <arg name="obstacle_topic" default="/dynamic_obstacles" />

    <node name="pipc" pkg="pipc" type="pipc_node" output="screen">
        <!-- publish topic -->
        <remap from="~dwa_path" to="/dwa/path" />
        <remap from="~mpc_path" to="/mpc/path" />
        <remap from="~goal_point" to="/goal/local_point" />
        <remap from="~cmd" to="/planning/pos_cmd" />
        <remap from="~px4ctrl" to="/mavros/setpoint_raw/attitude" />

        <!-- subscribe topic -->
        <remap from="~local_pc" to="$(arg local_map_topic)" />
        <remap from="~static_pc" to="$(arg static_map_topic)" />
        <remap from="~odom" to="$(arg odometry_topic)" />
        <remap from="~imu" to="$(arg imu_topic)" />
        <remap from="~goal" to="/goal" />
        <remap from="~rc_in" to="/mavros/rc/in" />

        <!-- Read yaml file -->
        <rosparam command="load" file="$(find pipc)/config/simulation.yaml" />
    </node>

    <!-- 点云处理 -->
    <node name="pointcloud_processor" pkg="pointcloud_processor" type="pointcloud_processor_node" output="screen">
        <param name="pointcloud_processor/local_map" value="$(arg local_map_topic)" />
        <param name="pointcloud_processor/static_map" value="$(arg static_map_topic)" />
        <param name="pointcloud_processor/obstacle_box" value="$(arg obstacle_topic)" />
    </node>

    <node pkg="nodelet" type="nodelet" name="manager" args="manager" output="screen">
        <param name="num_worker_threads" value="16" />
    </node>

    <node pkg="nodelet" type="nodelet" name="so3_quadrotor" args="load so3_quadrotor/Nodelet manager" output="screen">
        <rosparam file="$(find test_interface)/config/so3_quadrotor.yaml" />

        <param name="init_x" value="$(arg init_x_)" />
        <param name="init_y" value="$(arg init_y_)" />
        <param name="init_z" value="$(arg init_z_)" />
        <remap from="~odom" to="$(arg odometry_topic)" />
        <remap from="~so3cmd" to="so3_cmd" />
        <remap from="~imu" to="$(arg imu_topic)" />
        <remap from="~vis" to="vis" />
    </node>

    <node pkg="nodelet" type="nodelet" name="so3_controller" args="load so3_controller/Nodelet manager" output="screen">
        <rosparam file="$(find test_interface)/config/so3_controller.yaml" />

        <remap from="~odom" to="$(arg odometry_topic)" />
        <remap from="~so3cmd" to="so3_cmd" />
        <remap from="~imu" to="$(arg imu_topic)" />
        <remap from="~position_cmd" to="/planning/pos_cmd" />
    </node>

    <node pkg="odom_visualization" name="odom_visualization" type="odom_visualization" output="screen">
        <remap from="~odom" to="$(arg odometry_topic)" />
        <param name="mesh_resource" value="package://odom_visualization/meshes/yunque-M.dae" />
        <param name="tf45" value="true" />
        <param name="color/a" value="1.0" />
        <param name="color/r" value="1.0" />
        <param name="color/g" value="1.0" />
        <param name="color/b" value="1.0" />
        <param name="covariance_scale" value="100.0" />
        <param name="robot_scale" value="1.0" />
    </node>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find pipc)/rviz/simulation.rviz" />

</launch>
