<launch>
  <arg name="map_type" default="complex" />

  <!-- size of map, change the size in x, y, z according to your application -->
  <arg name="map_size_x" value="40.0" />
  <arg name="map_size_y" value="40.0" />
  <arg name="map_size_z" value="5.0" />

  <!-- 初始位置 -->
  <arg name="init_x_" value="0.0" />
  <arg name="init_y_" value="0.0" />
  <arg name="init_z_" value="1.0" />

  <!-- 话题名称 -->
  <arg name="odom_topic" value="/lidar_slam/odom" />
  <arg name="global_cloud_topic" default="/global_cloud_topic" />
  <arg name="frame_id" default="world" />

  <param name="add_boundary" type="bool" value="false" />
  <param name="is_bridge" type="bool" value="false" />
  <param name="downsample_res" type="double" value="0.1" />

  <!-- 虚拟点云地图 -->
  <node name="virtual_map" pkg="virtual_map" type="virtual_map_node" output="screen">
    <remap from="~pcd" to="/virtual_map/pointcloud2" />
    <!-- <remap from="~pcd" to="/global_sensing/pointcloud2" /> -->
    <remap from="~obstacle_box" to="/virtual_map/obstacle_box" />
    <!-- Map parameters -->
    <param name="resolution" value="0.1" type="double" />
    <param name="map_type" value="$(arg map_type)" type="str" />
    <param name="frame_id" value="$(arg frame_id)" type="str" />
    <param name="update_rate" value="10.0" type="double" />
    <param name="fixed_wall/gap" value="2.0" type="double" />
  </node>

  <!-- 点云处理 -->
  <node name="pointcloud_processor" pkg="pointcloud_processor" type="pointcloud_processor_node" output="screen">
    <param name="pointcloud_processor/local_map" value="/virtual_map/pointcloud2" />
    <param name="pointcloud_processor/static_map" value="/virtual_map/static_map" />
    <param name="pointcloud_processor/obstacle_box" value="/virtual_map/obstacle_box" />
  </node>

  <!-- 仿真器 -->
  <node name="local_sensing" pkg="local_sensing_node" type="pcl_render_node">
    <rosparam command="load" file="$(find local_sensing_node)/params/camera.yaml" />

    <remap from="~global_map" to="$(arg global_cloud_topic)" />
    <remap from="~odometry" to="$(arg odom_topic)" />

    <!-- VLP-32 -->
    <param name="is_360lidar" value="1" />
    <param name="sensing_horizon" value="30.0" />
    <param name="sensing_rate" value="10.0" />
    <param name="estimation_rate" value="10.0" />
    <param name="polar_resolution" value="0.2" />
    <param name="yaw_fov" value="360.0" />
    <param name="vertical_fov" value="60.0" />
    <param name="min_raylength" value="0.3" />
    <param name="livox_linestep" value="1.4" />
    <param name="curvature_limit" value="100.0" />
    <param name="hash_cubesize" value="5.0" />
    <param name="use_avia_pattern" value="0" />
    <param name="use_vlp32_pattern" value="0" />
    <param name="use_minicf_pattern" value="1" />

    <param name="downsample_res" value="0.1" />

    <param name="dynobj_enable" value="0" />
    <param name="dynobject_size" value="0.8" />
    <param name="dynobject_num" value="10" />
    <param name="dyn_mode" value="0" /><!-- 0 for a=0, 1 for a=g, 2 for random walk -->
    <param name="dyn_velocity" value="1.0" />

    <!-- collision parameter -->
    <param name="collisioncheck_enable" value="0" />
    <param name="collision_range" value="0.3" />

    <param name="output_pcd" value="0" />

    <param name="map/x_size" value="$(arg map_size_x)" />
    <param name="map/y_size" value="$(arg map_size_y)" />
    <param name="map/z_size" value="$(arg map_size_z)" />
  </node>

  <node pkg="nodelet" type="nodelet" name="manager" args="manager" output="screen">
    <param name="num_worker_threads" value="16" />
  </node>

  <node pkg="nodelet" type="nodelet" name="so3_quadrotor" args="load so3_quadrotor/Nodelet manager" output="screen">
    <rosparam file="$(find test_interface)/config/so3_quadrotor.yaml" />

    <param name="init_x" value="$(arg init_x_)" />
    <param name="init_y" value="$(arg init_y_)" />
    <param name="init_z" value="$(arg init_z_)" />
    <remap from="~odom" to="/lidar_slam/odom" />
    <remap from="~so3cmd" to="so3_cmd" />
    <remap from="~imu" to="/lidar_slam/imu" />
    <remap from="~vis" to="vis" />
  </node>

  <node pkg="nodelet" type="nodelet" name="so3_controller" args="load so3_controller/Nodelet manager" output="screen">
    <rosparam file="$(find test_interface)/config/so3_controller.yaml" />

    <remap from="~odom" to="/lidar_slam/odom" />
    <remap from="~so3cmd" to="so3_cmd" />
    <remap from="~imu" to="/lidar_slam/imu" />
    <remap from="~position_cmd" to="/planning/pos_cmd" />
  </node>


  <node pkg="odom_visualization" name="odom_visualization" type="odom_visualization" output="screen">
    <remap from="~odom" to="/lidar_slam/odom" />
    <param name="mesh_resource" value="package://odom_visualization/meshes/yunque-M.dae" />
    <param name="tf45" value="true" />
    <param name="color/a" value="1.0" />
    <param name="color/r" value="1.0" />
    <param name="color/g" value="1.0" />
    <param name="color/b" value="1.0" />
    <param name="covariance_scale" value="100.0" />
    <param name="robot_scale" value="1.0" />
  </node>

</launch>
